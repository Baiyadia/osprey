<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaiqi.osprey.service.dao.UserLoginRecordRepository">
  <!-- CodeBuilder Generated -->
  <resultMap id="UserLoginRecordMap" type="com.kaiqi.osprey.service.domain.UserLoginRecord">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="mac_address" property="macAddress" jdbcType="VARCHAR" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Table_Name">
    user_login_record
  </sql>
  <sql id="Base_Column_List_Without_Id">
    user_id, token, device_id, mac_address, imei, ip_address, region, last_login_ip, 
    user_agent, create_time, update_time
  </sql>
  <sql id="Base_Column_List">
    id, 
    <include refid="Base_Column_List_Without_Id" />
  </sql>
  <sql id="Insert_Columns">
    <if test="record.userId != null">
      user_id,
    </if>
    <if test="record.token != null">
      token,
    </if>
    <if test="record.deviceId != null">
      device_id,
    </if>
    <if test="record.macAddress != null">
      mac_address,
    </if>
    <if test="record.imei != null">
      imei,
    </if>
    <if test="record.ipAddress != null">
      ip_address,
    </if>
    <if test="record.region != null">
      region,
    </if>
    <if test="record.lastLoginIp != null">
      last_login_ip,
    </if>
    <if test="record.userAgent != null">
      user_agent,
    </if>
    <if test="record.createTime != null">
      create_time,
    </if>
    <if test="record.updateTime != null">
      update_time,
    </if>
  </sql>
  <sql id="Insert_Values">
    <if test="record.userId != null">
      #{record.userId,jdbcType=BIGINT},
    </if>
    <if test="record.token != null">
      #{record.token,jdbcType=VARCHAR},
    </if>
    <if test="record.deviceId != null">
      #{record.deviceId,jdbcType=VARCHAR},
    </if>
    <if test="record.macAddress != null">
      #{record.macAddress,jdbcType=VARCHAR},
    </if>
    <if test="record.imei != null">
      #{record.imei,jdbcType=VARCHAR},
    </if>
    <if test="record.ipAddress != null">
      #{record.ipAddress,jdbcType=VARCHAR},
    </if>
    <if test="record.region != null">
      #{record.region,jdbcType=VARCHAR},
    </if>
    <if test="record.lastLoginIp != null">
      #{record.lastLoginIp,jdbcType=VARCHAR},
    </if>
    <if test="record.userAgent != null">
      #{record.userAgent,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
      #{record.createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="record.updateTime != null">
      #{record.updateTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  <sql id="Batch_Insert_Values">
    #{record.userId,jdbcType=BIGINT},
    #{record.token,jdbcType=VARCHAR},
    #{record.deviceId,jdbcType=VARCHAR},
    #{record.macAddress,jdbcType=VARCHAR},
    #{record.imei,jdbcType=VARCHAR},
    #{record.ipAddress,jdbcType=VARCHAR},
    #{record.region,jdbcType=VARCHAR},
    #{record.lastLoginIp,jdbcType=VARCHAR},
    #{record.userAgent,jdbcType=VARCHAR},
    #{record.createTime,jdbcType=TIMESTAMP},
    #{record.updateTime,jdbcType=TIMESTAMP},
  </sql>
  <sql id="Batch_Insert_Values_On_DuplicateKey">
    #{record.id,jdbcType=BIGINT},
    <include refid="Batch_Insert_Values" />
  </sql>
  <sql id="Update_Set_From_Bean">
    <if test="record.userId != null">
      user_id = #{record.userId,jdbcType=BIGINT},
    </if>
    <if test="record.token != null">
      token = #{record.token,jdbcType=VARCHAR},
    </if>
    <if test="record.deviceId != null">
      device_id = #{record.deviceId,jdbcType=VARCHAR},
    </if>
    <if test="record.macAddress != null">
      mac_address = #{record.macAddress,jdbcType=VARCHAR},
    </if>
    <if test="record.imei != null">
      imei = #{record.imei,jdbcType=VARCHAR},
    </if>
    <if test="record.ipAddress != null">
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
    </if>
    <if test="record.region != null">
      region = #{record.region,jdbcType=VARCHAR},
    </if>
    <if test="record.lastLoginIp != null">
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
    </if>
    <if test="record.userAgent != null">
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="record.updateTime != null">
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  <!-- insert -->
  <insert id="insert" parameterType="java.util.Map">
    <selectKey resultType="java.lang.Long" keyProperty="record.id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Insert_Columns" />
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Insert_Values" />
    </trim>
  </insert>
  <insert id="batchInsert" parameterType="java.util.Map">
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List_Without_Id" />
    </trim>
    values 
    <foreach collection="records" item="record" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Batch_Insert_Values" />
      </trim>
    </foreach>
  </insert>
  <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    values 
    <foreach collection="records" item="record" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Batch_Insert_Values_On_DuplicateKey" />
      </trim>
    </foreach>
    ON DUPLICATE KEY UPDATE
    user_id = VALUES(user_id), token = VALUES(token), device_id = VALUES(device_id), mac_address = VALUES(mac_address), imei = VALUES(imei), ip_address = VALUES(ip_address), region = VALUES(region), last_login_ip = VALUES(last_login_ip), user_agent = VALUES(user_agent), create_time = VALUES(create_time), update_time = VALUES(update_time)
  </insert>
  <!-- end insert -->
  <!-- delete -->
  <delete id="deleteById" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteIn" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    where id in 
    <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
      #{record.id,jdbcType=BIGINT}
    </foreach>
  </delete>
  <!-- end delete -->
  <!-- update -->
  <update id="updateById" parameterType="java.util.Map">
    update 
    <include refid="Table_Name" />
    <set>
      <include refid="Update_Set_From_Bean" />
    </set>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByExample" parameterType="java.util.Map">
    update 
    <include refid="Table_Name" />
    <set>
      <include refid="Update_Set_From_Bean" />
    </set>
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="batchUpdate" parameterType="java.util.Map">
    <foreach collection="records" item="record" index="index" open="" close="" separator=";">
      update 
      <include refid="Table_Name" />
      <set>
        <include refid="Update_Set_From_Bean" />
      </set>
      where id = #{record.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <!-- end update -->
  <!-- select -->
  <select id="selectById" parameterType="java.util.Map" resultMap="UserLoginRecordMap">
    select 
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByExample" resultMap="UserLoginRecordMap" parameterType="java.util.Map">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectOneByExample" resultMap="UserLoginRecordMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectIn" resultMap="UserLoginRecordMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    where id in 
    <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
      #{record.id,jdbcType=BIGINT}
    </foreach>
  </select>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) as total from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByPager" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) as total from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByPager" resultMap="UserLoginRecordMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="pager.sortItem != null and pager.sortItem != ''">
      order by ${pager.sortItem} ${pager.sortType}
    </if>
    limit #{pager.startIndex} , #{pager.pageSize}
  </select>
  <!-- end select -->
  <!-- My Custom Interfaces -->
</mapper>